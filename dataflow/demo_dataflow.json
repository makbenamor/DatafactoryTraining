{
	"name": "demo_dataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "races",
						"type": "DatasetReference"
					},
					"name": "Races"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "DataLakeStorage_sakimo2024",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "CastDate"
				},
				{
					"name": "FilterRaceID"
				},
				{
					"name": "alterRow1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          raceId as integer,",
				"          year as short,",
				"          round as short,",
				"          circuitId as short,",
				"          name as string,",
				"          date as date,",
				"          time as string,",
				"          url as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Races",
				"Races cast(output(",
				"          date as date 'dd-MM-yyyy'",
				"     ),",
				"     errors: true) ~> CastDate",
				"CastDate filter(raceId==1 || raceId==2 || raceId==3 ||raceId==5 ||raceId==6 ) ~> FilterRaceID",
				"FilterRaceID alterRow(deleteIf(raceId >= 5),",
				"     updateIf(raceId ==3)) ~> alterRow1",
				"alterRow1 derive(raceId = raceId + 2000) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1) ~> sink1"
			]
		}
	}
}